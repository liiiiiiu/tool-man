class Check {
  constructor() {
    this.objProto = Object.prototype;
    this.fnToString = this.objProto.toString;
  }
  getTag(value) {
    if (value == null) {
      return value === void 0 ? "[object Undefined]" : "[object Null]";
    }
    return this.fnToString.call(value);
  }
  str(value) {
    return typeof value === "string" || typeof value === "object" && !this.nul(value) && this.getTag(value) === "[object String]";
  }
  num(value) {
    return typeof value === "number" || typeof value === "object" && !this.nul(value) && this.getTag(value) === "[object Number]";
  }
  bool(value) {
    return value === true || value === false || typeof value === "object" && !this.nul(value) && this.getTag(value) === "[object Boolean]";
  }
  arr(value) {
    return Array.isArray(value);
  }
  arrLike(value) {
    return !this.nul(value) && !this.fun(value) && this.len(value.length);
  }
  obj(value) {
    return typeof value === "object";
  }
  plainObj(value) {
    return typeof value === "object" && !this.nul(value) && this.getTag(value) === "[object Object]";
  }
  objLike(value) {
    return typeof value === "object" && !this.nul(value);
  }
  symbol(value) {
    return typeof value === "symbol";
  }
  fun(value) {
    return typeof value === "function";
  }
  nan(value) {
    return value !== value;
  }
  undef(value) {
    return typeof value === "undefined";
  }
  nul(value) {
    return value === null;
  }
  len(value) {
    return typeof value === "number" && value > -1 && value % 1 === 0 && value < Number.MAX_SAFE_INTEGER;
  }
  args(value) {
    return this.objLike(value) && this.getTag(value) === "[object Arguments]";
  }
  err(value) {
    if (!this.objLike(value)) {
      return false;
    }
    const tag = this.getTag(value);
    return tag == "[object Error]" || tag == "[object DOMException]" || typeof value.message === "string" && typeof value.name === "string" && !this.plainObj(value);
  }
  wx() {
    return typeof window === "object" && !this.nul(window) && window.Object === Object && Object.prototype.hasOwnProperty.call(window, "wx");
  }
}
const check$4 = new Check();
const rint = /^-?\d+$/;
const rposInt = /^\d+$/;
const rdecimal = /^\d{1,10}([.]\d{2}){1}$/;
const rposDecimal = /^\d+(\.\d{0,2})?$/;
const rmobilephone = /^1[3456789][0-9]{9}$/;
const remial = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\.[a-zA-Z0-9_-])+/;
const rurl = /^(?=^.{3,255}$)(http(s)?:\/\/)?(www\.)?[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+(:\d+)*(\/\w+\.\w+)*([\?&]\w+=\w*)*$/;
function is_string$1(value) {
  return check$4.str(value);
}
function is_number$1(value) {
  return check$4.num(value);
}
function is_integer$1(value) {
  return check$4.num(value) && rint.test(value + "");
}
function is_positive_integer$1(value) {
  return check$4.num(value) && rposInt.test(value + "");
}
function is_float$1(value) {
  return check$4.num(value) && rdecimal.test(value + "");
}
function is_positive_float$1(value) {
  return check$4.num(value) && rposDecimal.test(value + "");
}
function is_boolean$1(value) {
  return check$4.bool(value);
}
function is_array$1(value) {
  return check$4.arr(value);
}
function is_array_like$1(value) {
  return check$4.arrLike(value);
}
function is_object$1(value) {
  return check$4.obj(value);
}
function is_plain_object$1(value) {
  return check$4.plainObj(value);
}
function is_object_like$1(value) {
  return check$4.objLike(value);
}
function is_symbol$1(value) {
  return check$4.symbol(value);
}
function is_function$1(value) {
  return check$4.fun(value);
}
function is_NaN$1(value) {
  return check$4.nan(value);
}
function is_undefined$1(value) {
  return check$4.undef(value);
}
function is_null$1(value) {
  return check$4.nul(value);
}
function is_length$1(value) {
  return check$4.len(value);
}
function is_arguments$1(value) {
  return check$4.args(value);
}
function is_error$1(value) {
  return check$4.err(value);
}
function is_leap_year$1(value) {
  if (!check$4.num(value)) {
    return false;
  }
  return value % 4 === 0 && value % 100 !== 0 || value % 400 === 0;
}
function is_local_mobilephone$1(value) {
  return rmobilephone.test(value + "");
}
function is_email$1(value) {
  if (!check$4.str(value)) {
    return false;
  }
  return remial.test(value + "");
}
function is_url$1(value) {
  if (!check$4.str(value)) {
    return false;
  }
  return rurl.test(value + "");
}
var checker = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  is_string: is_string$1,
  is_number: is_number$1,
  is_integer: is_integer$1,
  is_positive_integer: is_positive_integer$1,
  is_float: is_float$1,
  is_positive_float: is_positive_float$1,
  is_boolean: is_boolean$1,
  is_array: is_array$1,
  is_array_like: is_array_like$1,
  is_object: is_object$1,
  is_plain_object: is_plain_object$1,
  is_object_like: is_object_like$1,
  is_symbol: is_symbol$1,
  is_function: is_function$1,
  is_NaN: is_NaN$1,
  is_undefined: is_undefined$1,
  is_null: is_null$1,
  is_length: is_length$1,
  is_arguments: is_arguments$1,
  is_error: is_error$1,
  is_leap_year: is_leap_year$1,
  is_local_mobilephone: is_local_mobilephone$1,
  is_email: is_email$1,
  is_url: is_url$1
}, Symbol.toStringTag, { value: "Module" }));
var DP = 20, RM = 1, MAX_DP = 1e6, MAX_POWER = 1e6, NE = -7, PE = 21, STRICT = false, NAME = "[big.js] ", INVALID = NAME + "Invalid ", INVALID_DP = INVALID + "decimal places", INVALID_RM = INVALID + "rounding mode", DIV_BY_ZERO = NAME + "Division by zero", P = {}, UNDEFINED = void 0, NUMERIC = /^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
function _Big_() {
  function Big2(n) {
    var x = this;
    if (!(x instanceof Big2))
      return n === UNDEFINED ? _Big_() : new Big2(n);
    if (n instanceof Big2) {
      x.s = n.s;
      x.e = n.e;
      x.c = n.c.slice();
    } else {
      if (typeof n !== "string") {
        if (Big2.strict === true && typeof n !== "bigint") {
          throw TypeError(INVALID + "value");
        }
        n = n === 0 && 1 / n < 0 ? "-0" : String(n);
      }
      parse(x, n);
    }
    x.constructor = Big2;
  }
  Big2.prototype = P;
  Big2.DP = DP;
  Big2.RM = RM;
  Big2.NE = NE;
  Big2.PE = PE;
  Big2.strict = STRICT;
  Big2.roundDown = 0;
  Big2.roundHalfUp = 1;
  Big2.roundHalfEven = 2;
  Big2.roundUp = 3;
  return Big2;
}
function parse(x, n) {
  var e, i, nl;
  if (!NUMERIC.test(n)) {
    throw Error(INVALID + "number");
  }
  x.s = n.charAt(0) == "-" ? (n = n.slice(1), -1) : 1;
  if ((e = n.indexOf(".")) > -1)
    n = n.replace(".", "");
  if ((i = n.search(/e/i)) > 0) {
    if (e < 0)
      e = i;
    e += +n.slice(i + 1);
    n = n.substring(0, i);
  } else if (e < 0) {
    e = n.length;
  }
  nl = n.length;
  for (i = 0; i < nl && n.charAt(i) == "0"; )
    ++i;
  if (i == nl) {
    x.c = [x.e = 0];
  } else {
    for (; nl > 0 && n.charAt(--nl) == "0"; )
      ;
    x.e = e - i - 1;
    x.c = [];
    for (e = 0; i <= nl; )
      x.c[e++] = +n.charAt(i++);
  }
  return x;
}
function round(x, sd, rm, more) {
  var xc = x.c;
  if (rm === UNDEFINED)
    rm = x.constructor.RM;
  if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {
    throw Error(INVALID_RM);
  }
  if (sd < 1) {
    more = rm === 3 && (more || !!xc[0]) || sd === 0 && (rm === 1 && xc[0] >= 5 || rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED)));
    xc.length = 1;
    if (more) {
      x.e = x.e - sd + 1;
      xc[0] = 1;
    } else {
      xc[0] = x.e = 0;
    }
  } else if (sd < xc.length) {
    more = rm === 1 && xc[sd] >= 5 || rm === 2 && (xc[sd] > 5 || xc[sd] === 5 && (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) || rm === 3 && (more || !!xc[0]);
    xc.length = sd--;
    if (more) {
      for (; ++xc[sd] > 9; ) {
        xc[sd] = 0;
        if (!sd--) {
          ++x.e;
          xc.unshift(1);
        }
      }
    }
    for (sd = xc.length; !xc[--sd]; )
      xc.pop();
  }
  return x;
}
function stringify(x, doExponential, isNonzero) {
  var e = x.e, s = x.c.join(""), n = s.length;
  if (doExponential) {
    s = s.charAt(0) + (n > 1 ? "." + s.slice(1) : "") + (e < 0 ? "e" : "e+") + e;
  } else if (e < 0) {
    for (; ++e; )
      s = "0" + s;
    s = "0." + s;
  } else if (e > 0) {
    if (++e > n) {
      for (e -= n; e--; )
        s += "0";
    } else if (e < n) {
      s = s.slice(0, e) + "." + s.slice(e);
    }
  } else if (n > 1) {
    s = s.charAt(0) + "." + s.slice(1);
  }
  return x.s < 0 && isNonzero ? "-" + s : s;
}
P.abs = function() {
  var x = new this.constructor(this);
  x.s = 1;
  return x;
};
P.cmp = function(y) {
  var isneg, x = this, xc = x.c, yc = (y = new x.constructor(y)).c, i = x.s, j = y.s, k = x.e, l = y.e;
  if (!xc[0] || !yc[0])
    return !xc[0] ? !yc[0] ? 0 : -j : i;
  if (i != j)
    return i;
  isneg = i < 0;
  if (k != l)
    return k > l ^ isneg ? 1 : -1;
  j = (k = xc.length) < (l = yc.length) ? k : l;
  for (i = -1; ++i < j; ) {
    if (xc[i] != yc[i])
      return xc[i] > yc[i] ^ isneg ? 1 : -1;
  }
  return k == l ? 0 : k > l ^ isneg ? 1 : -1;
};
P.div = function(y) {
  var x = this, Big2 = x.constructor, a = x.c, b = (y = new Big2(y)).c, k = x.s == y.s ? 1 : -1, dp = Big2.DP;
  if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
    throw Error(INVALID_DP);
  }
  if (!b[0]) {
    throw Error(DIV_BY_ZERO);
  }
  if (!a[0]) {
    y.s = k;
    y.c = [y.e = 0];
    return y;
  }
  var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), rl = r.length, q = y, qc = q.c = [], qi = 0, p = dp + (q.e = x.e - y.e) + 1;
  q.s = k;
  k = p < 0 ? 0 : p;
  bz.unshift(0);
  for (; rl++ < bl; )
    r.push(0);
  do {
    for (n = 0; n < 10; n++) {
      if (bl != (rl = r.length)) {
        cmp = bl > rl ? 1 : -1;
      } else {
        for (ri = -1, cmp = 0; ++ri < bl; ) {
          if (b[ri] != r[ri]) {
            cmp = b[ri] > r[ri] ? 1 : -1;
            break;
          }
        }
      }
      if (cmp < 0) {
        for (bt = rl == bl ? b : bz; rl; ) {
          if (r[--rl] < bt[rl]) {
            ri = rl;
            for (; ri && !r[--ri]; )
              r[ri] = 9;
            --r[ri];
            r[rl] += 10;
          }
          r[rl] -= bt[rl];
        }
        for (; !r[0]; )
          r.shift();
      } else {
        break;
      }
    }
    qc[qi++] = cmp ? n : ++n;
    if (r[0] && cmp)
      r[rl] = a[ai] || 0;
    else
      r = [a[ai]];
  } while ((ai++ < al || r[0] !== UNDEFINED) && k--);
  if (!qc[0] && qi != 1) {
    qc.shift();
    q.e--;
    p--;
  }
  if (qi > p)
    round(q, p, Big2.RM, r[0] !== UNDEFINED);
  return q;
};
P.eq = function(y) {
  return this.cmp(y) === 0;
};
P.gt = function(y) {
  return this.cmp(y) > 0;
};
P.gte = function(y) {
  return this.cmp(y) > -1;
};
P.lt = function(y) {
  return this.cmp(y) < 0;
};
P.lte = function(y) {
  return this.cmp(y) < 1;
};
P.minus = P.sub = function(y) {
  var i, j, t, xlty, x = this, Big2 = x.constructor, a = x.s, b = (y = new Big2(y)).s;
  if (a != b) {
    y.s = -b;
    return x.plus(y);
  }
  var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;
  if (!xc[0] || !yc[0]) {
    if (yc[0]) {
      y.s = -b;
    } else if (xc[0]) {
      y = new Big2(x);
    } else {
      y.s = 1;
    }
    return y;
  }
  if (a = xe - ye) {
    if (xlty = a < 0) {
      a = -a;
      t = xc;
    } else {
      ye = xe;
      t = yc;
    }
    t.reverse();
    for (b = a; b--; )
      t.push(0);
    t.reverse();
  } else {
    j = ((xlty = xc.length < yc.length) ? xc : yc).length;
    for (a = b = 0; b < j; b++) {
      if (xc[b] != yc[b]) {
        xlty = xc[b] < yc[b];
        break;
      }
    }
  }
  if (xlty) {
    t = xc;
    xc = yc;
    yc = t;
    y.s = -y.s;
  }
  if ((b = (j = yc.length) - (i = xc.length)) > 0)
    for (; b--; )
      xc[i++] = 0;
  for (b = i; j > a; ) {
    if (xc[--j] < yc[j]) {
      for (i = j; i && !xc[--i]; )
        xc[i] = 9;
      --xc[i];
      xc[j] += 10;
    }
    xc[j] -= yc[j];
  }
  for (; xc[--b] === 0; )
    xc.pop();
  for (; xc[0] === 0; ) {
    xc.shift();
    --ye;
  }
  if (!xc[0]) {
    y.s = 1;
    xc = [ye = 0];
  }
  y.c = xc;
  y.e = ye;
  return y;
};
P.mod = function(y) {
  var ygtx, x = this, Big2 = x.constructor, a = x.s, b = (y = new Big2(y)).s;
  if (!y.c[0]) {
    throw Error(DIV_BY_ZERO);
  }
  x.s = y.s = 1;
  ygtx = y.cmp(x) == 1;
  x.s = a;
  y.s = b;
  if (ygtx)
    return new Big2(x);
  a = Big2.DP;
  b = Big2.RM;
  Big2.DP = Big2.RM = 0;
  x = x.div(y);
  Big2.DP = a;
  Big2.RM = b;
  return this.minus(x.times(y));
};
P.neg = function() {
  var x = new this.constructor(this);
  x.s = -x.s;
  return x;
};
P.plus = P.add = function(y) {
  var e, k, t, x = this, Big2 = x.constructor;
  y = new Big2(y);
  if (x.s != y.s) {
    y.s = -y.s;
    return x.minus(y);
  }
  var xe = x.e, xc = x.c, ye = y.e, yc = y.c;
  if (!xc[0] || !yc[0]) {
    if (!yc[0]) {
      if (xc[0]) {
        y = new Big2(x);
      } else {
        y.s = x.s;
      }
    }
    return y;
  }
  xc = xc.slice();
  if (e = xe - ye) {
    if (e > 0) {
      ye = xe;
      t = yc;
    } else {
      e = -e;
      t = xc;
    }
    t.reverse();
    for (; e--; )
      t.push(0);
    t.reverse();
  }
  if (xc.length - yc.length < 0) {
    t = yc;
    yc = xc;
    xc = t;
  }
  e = yc.length;
  for (k = 0; e; xc[e] %= 10)
    k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;
  if (k) {
    xc.unshift(k);
    ++ye;
  }
  for (e = xc.length; xc[--e] === 0; )
    xc.pop();
  y.c = xc;
  y.e = ye;
  return y;
};
P.pow = function(n) {
  var x = this, one = new x.constructor("1"), y = one, isneg = n < 0;
  if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {
    throw Error(INVALID + "exponent");
  }
  if (isneg)
    n = -n;
  for (; ; ) {
    if (n & 1)
      y = y.times(x);
    n >>= 1;
    if (!n)
      break;
    x = x.times(x);
  }
  return isneg ? one.div(y) : y;
};
P.prec = function(sd, rm) {
  if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {
    throw Error(INVALID + "precision");
  }
  return round(new this.constructor(this), sd, rm);
};
P.round = function(dp, rm) {
  if (dp === UNDEFINED)
    dp = 0;
  else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {
    throw Error(INVALID_DP);
  }
  return round(new this.constructor(this), dp + this.e + 1, rm);
};
P.sqrt = function() {
  var r, c, t, x = this, Big2 = x.constructor, s = x.s, e = x.e, half = new Big2("0.5");
  if (!x.c[0])
    return new Big2(x);
  if (s < 0) {
    throw Error(NAME + "No square root");
  }
  s = Math.sqrt(x + "");
  if (s === 0 || s === 1 / 0) {
    c = x.c.join("");
    if (!(c.length + e & 1))
      c += "0";
    s = Math.sqrt(c);
    e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);
    r = new Big2((s == 1 / 0 ? "5e" : (s = s.toExponential()).slice(0, s.indexOf("e") + 1)) + e);
  } else {
    r = new Big2(s + "");
  }
  e = r.e + (Big2.DP += 4);
  do {
    t = r;
    r = half.times(t.plus(x.div(t)));
  } while (t.c.slice(0, e).join("") !== r.c.slice(0, e).join(""));
  return round(r, (Big2.DP -= 4) + r.e + 1, Big2.RM);
};
P.times = P.mul = function(y) {
  var c, x = this, Big2 = x.constructor, xc = x.c, yc = (y = new Big2(y)).c, a = xc.length, b = yc.length, i = x.e, j = y.e;
  y.s = x.s == y.s ? 1 : -1;
  if (!xc[0] || !yc[0]) {
    y.c = [y.e = 0];
    return y;
  }
  y.e = i + j;
  if (a < b) {
    c = xc;
    xc = yc;
    yc = c;
    j = a;
    a = b;
    b = j;
  }
  for (c = new Array(j = a + b); j--; )
    c[j] = 0;
  for (i = b; i--; ) {
    b = 0;
    for (j = a + i; j > i; ) {
      b = c[j] + yc[i] * xc[j - i - 1] + b;
      c[j--] = b % 10;
      b = b / 10 | 0;
    }
    c[j] = b;
  }
  if (b)
    ++y.e;
  else
    c.shift();
  for (i = c.length; !c[--i]; )
    c.pop();
  y.c = c;
  return y;
};
P.toExponential = function(dp, rm) {
  var x = this, n = x.c[0];
  if (dp !== UNDEFINED) {
    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
      throw Error(INVALID_DP);
    }
    x = round(new x.constructor(x), ++dp, rm);
    for (; x.c.length < dp; )
      x.c.push(0);
  }
  return stringify(x, true, !!n);
};
P.toFixed = function(dp, rm) {
  var x = this, n = x.c[0];
  if (dp !== UNDEFINED) {
    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
      throw Error(INVALID_DP);
    }
    x = round(new x.constructor(x), dp + x.e + 1, rm);
    for (dp = dp + x.e + 1; x.c.length < dp; )
      x.c.push(0);
  }
  return stringify(x, false, !!n);
};
P[Symbol.for("nodejs.util.inspect.custom")] = P.toJSON = P.toString = function() {
  var x = this, Big2 = x.constructor;
  return stringify(x, x.e <= Big2.NE || x.e >= Big2.PE, !!x.c[0]);
};
P.toNumber = function() {
  var n = Number(stringify(this, true, true));
  if (this.constructor.strict === true && !this.eq(n.toString())) {
    throw Error(NAME + "Imprecise conversion");
  }
  return n;
};
P.toPrecision = function(sd, rm) {
  var x = this, Big2 = x.constructor, n = x.c[0];
  if (sd !== UNDEFINED) {
    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {
      throw Error(INVALID + "precision");
    }
    x = round(new Big2(x), sd, rm);
    for (; x.c.length < sd; )
      x.c.push(0);
  }
  return stringify(x, sd <= x.e || x.e <= Big2.NE || x.e >= Big2.PE, !!n);
};
P.valueOf = function() {
  var x = this, Big2 = x.constructor;
  if (Big2.strict === true) {
    throw Error(NAME + "valueOf disallowed");
  }
  return stringify(x, x.e <= Big2.NE || x.e >= Big2.PE, true);
};
var Big = _Big_();
const check$3 = new Check();
const rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/;
class Cast {
  unwrap(value) {
    if (typeof value === "string") {
      if (value === +value + "") {
        return +value;
      }
      if (value === "true") {
        return true;
      }
      if (value === "false") {
        return false;
      }
      if (value === "null") {
        return null;
      }
      if (rbrace.test(value)) {
        try {
          return JSON.parse(value);
        } catch (error) {
        }
      }
    }
    return value;
  }
  str(value) {
    if (check$3.symbol(value)) {
      value = value.description || "";
    }
    return (value + "").toString() + "";
  }
  num(value) {
    let newValue = +this.unwrap(value);
    return !check$3.nan(newValue) ? newValue : 0;
  }
  bool(value) {
    return !!value;
  }
  arr(value) {
    if (check$3.arr(value)) {
      return value;
    }
    if (check$3.str(value) && value.indexOf(",") > -1) {
      return value.split(",");
    }
    return [value];
  }
  symbol(value) {
    let newValue = "";
    if (!check$3.str(value) || !check$3.num(value)) {
      newValue = this.str(value);
    }
    return Symbol(newValue || value + "");
  }
  undef() {
    return void 0;
  }
  nul() {
    return null;
  }
}
const strChineseFirstPY = "";
const oMultiDiff = {
  "19969": "DZ",
  "19975": "WM",
  "19988": "QJ",
  "20048": "YL",
  "20056": "SC",
  "20060": "NM",
  "20094": "QG",
  "20127": "QJ",
  "20167": "QC",
  "20193": "YG",
  "20250": "KH",
  "20256": "ZC",
  "20282": "SC",
  "20285": "QJG",
  "20291": "TD",
  "20314": "YD",
  "20340": "NE",
  "20375": "TD",
  "20389": "YJ",
  "20391": "CZ",
  "20415": "PB",
  "20446": "YS",
  "20447": "SQ",
  "20504": "TC",
  "20608": "KG",
  "20854": "QJ",
  "20857": "ZC",
  "20911": "PF",
  "20985": "AW",
  "21032": "PB",
  "21048": "XQ",
  "21049": "SC",
  "21089": "YS",
  "21119": "JC",
  "21242": "SB",
  "21273": "SC",
  "21305": "YP",
  "21306": "QO",
  "21330": "ZC",
  "21333": "SDC",
  "21345": "QK",
  "21378": "CA",
  "21397": "SC",
  "21414": "XS",
  "21442": "SC",
  "21477": "JG",
  "21480": "TD",
  "21484": "ZS",
  "21494": "YX",
  "21505": "YX",
  "21512": "HG",
  "21523": "XH",
  "21537": "PB",
  "21542": "PF",
  "21549": "KH",
  "21571": "E",
  "21574": "DA",
  "21588": "TD",
  "21589": "O",
  "21618": "ZC",
  "21621": "KHA",
  "21632": "ZJ",
  "21654": "KG",
  "21679": "LKG",
  "21683": "KH",
  "21710": "A",
  "21719": "YH",
  "21734": "WOE",
  "21769": "A",
  "21780": "WN",
  "21804": "XH",
  "21834": "A",
  "21899": "ZD",
  "21903": "RN",
  "21908": "WO",
  "21939": "ZC",
  "21956": "SA",
  "21964": "YA",
  "21970": "TD",
  "22003": "A",
  "22031": "JG",
  "22040": "XS",
  "22060": "ZC",
  "22066": "ZC",
  "22079": "MH",
  "22129": "XJ",
  "22179": "XA",
  "22237": "NJ",
  "22244": "TD",
  "22280": "JQ",
  "22300": "YH",
  "22313": "XW",
  "22331": "YQ",
  "22343": "YJ",
  "22351": "PH",
  "22395": "DC",
  "22412": "TD",
  "22484": "PB",
  "22500": "PB",
  "22534": "ZD",
  "22549": "DH",
  "22561": "PB",
  "22612": "TD",
  "22771": "KQ",
  "22831": "HB",
  "22841": "JG",
  "22855": "QJ",
  "22865": "XQ",
  "23013": "ML",
  "23081": "WM",
  "23487": "SX",
  "23558": "QJ",
  "23561": "YW",
  "23586": "YW",
  "23614": "YW",
  "23615": "SN",
  "23631": "PB",
  "23646": "ZS",
  "23663": "ZT",
  "23673": "YG",
  "23762": "TD",
  "23769": "ZS",
  "23780": "QJ",
  "23884": "QK",
  "24055": "XH",
  "24113": "DC",
  "24162": "ZC",
  "24191": "GA",
  "24273": "QJ",
  "24324": "NL",
  "24377": "TD",
  "24378": "QJ",
  "24439": "PF",
  "24554": "ZS",
  "24683": "TD",
  "24694": "WE",
  "24733": "LK",
  "24925": "TN",
  "25094": "ZG",
  "25100": "XQ",
  "25103": "XH",
  "25153": "PB",
  "25170": "PB",
  "25179": "KG",
  "25203": "PB",
  "25240": "ZS",
  "25282": "FB",
  "25303": "NA",
  "25324": "KG",
  "25341": "ZY",
  "25373": "WZ",
  "25375": "XJ",
  "25384": "A",
  "25457": "A",
  "25528": "SD",
  "25530": "SC",
  "25552": "TD",
  "25774": "ZC",
  "25874": "ZC",
  "26044": "YW",
  "26080": "WM",
  "26292": "PB",
  "26333": "PB",
  "26355": "ZY",
  "26366": "CZ",
  "26397": "ZC",
  "26399": "QJ",
  "26415": "ZS",
  "26451": "SB",
  "26526": "ZC",
  "26552": "JG",
  "26561": "TD",
  "26588": "JG",
  "26597": "CZ",
  "26629": "ZS",
  "26638": "YL",
  "26646": "XQ",
  "26653": "KG",
  "26657": "XJ",
  "26727": "HG",
  "26894": "ZC",
  "26937": "ZS",
  "26946": "ZC",
  "26999": "KJ",
  "27099": "KJ",
  "27449": "YQ",
  "27481": "XS",
  "27542": "ZS",
  "27663": "ZS",
  "27748": "TS",
  "27784": "SC",
  "27788": "ZD",
  "27795": "TD",
  "27812": "O",
  "27850": "PB",
  "27852": "MB",
  "27895": "SL",
  "27898": "PL",
  "27973": "QJ",
  "27981": "KH",
  "27986": "HX",
  "27994": "XJ",
  "28044": "YC",
  "28065": "WG",
  "28177": "SM",
  "28267": "QJ",
  "28291": "KH",
  "28337": "ZQ",
  "28463": "TL",
  "28548": "DC",
  "28601": "TD",
  "28689": "PB",
  "28805": "JG",
  "28820": "QG",
  "28846": "PB",
  "28952": "TD",
  "28975": "ZC",
  "29100": "A",
  "29325": "QJ",
  "29575": "SL",
  "29602": "FB",
  "30010": "TD",
  "30044": "CX",
  "30058": "PF",
  "30091": "YSP",
  "30111": "YN",
  "30229": "XJ",
  "30427": "SC",
  "30465": "SX",
  "30631": "YQ",
  "30655": "QJ",
  "30684": "QJG",
  "30707": "SD",
  "30729": "XH",
  "30796": "LG",
  "30917": "PB",
  "31074": "NM",
  "31085": "JZ",
  "31109": "SC",
  "31181": "ZC",
  "31192": "MLB",
  "31293": "JQ",
  "31400": "YX",
  "31584": "YJ",
  "31896": "ZN",
  "31909": "ZY",
  "31995": "XJ",
  "32321": "PF",
  "32327": "ZY",
  "32418": "HG",
  "32420": "XQ",
  "32421": "HG",
  "32438": "LG",
  "32473": "GJ",
  "32488": "TD",
  "32521": "QJ",
  "32527": "PB",
  "32562": "ZSQ",
  "32564": "JZ",
  "32735": "ZD",
  "32793": "PB",
  "33071": "PF",
  "33098": "XL",
  "33100": "YA",
  "33152": "PB",
  "33261": "CX",
  "33324": "BP",
  "33333": "TD",
  "33406": "YA",
  "33426": "WM",
  "33432": "PB",
  "33445": "JG",
  "33486": "ZN",
  "33493": "TS",
  "33507": "QJ",
  "33540": "QJ",
  "33544": "ZC",
  "33564": "XQ",
  "33617": "YT",
  "33632": "QJ",
  "33636": "XH",
  "33637": "YX",
  "33694": "WG",
  "33705": "PF",
  "33728": "YW",
  "33882": "SR",
  "34067": "WM",
  "34074": "YW",
  "34121": "QJ",
  "34255": "ZC",
  "34259": "XL",
  "34425": "JH",
  "34430": "XH",
  "34485": "KH",
  "34503": "YS",
  "34532": "HG",
  "34552": "XS",
  "34558": "YE",
  "34593": "ZL",
  "34660": "YQ",
  "34892": "XH",
  "34928": "SC",
  "34999": "QJ",
  "35048": "PB",
  "35059": "SC",
  "35098": "ZC",
  "35203": "TQ",
  "35265": "JX",
  "35299": "JX",
  "35782": "SZ",
  "35828": "YS",
  "35830": "E",
  "35843": "TD",
  "35895": "YG",
  "35977": "MH",
  "36158": "JG",
  "36228": "QJ",
  "36426": "XQ",
  "36466": "DC",
  "36710": "JC",
  "36711": "ZYG",
  "36767": "PB",
  "36866": "SK",
  "36951": "YW",
  "37034": "YX",
  "37063": "XH",
  "37218": "ZC",
  "37325": "ZC",
  "38063": "PB",
  "38079": "TD",
  "38085": "QY",
  "38107": "DC",
  "38116": "TD",
  "38123": "YD",
  "38224": "HG",
  "38241": "XTC",
  "38271": "ZC",
  "38415": "YE",
  "38426": "KH",
  "38461": "YD",
  "38463": "AE",
  "38466": "PB",
  "38477": "XJ",
  "38518": "YT",
  "38551": "WK",
  "38585": "ZC",
  "38704": "XS",
  "38739": "LJ",
  "38761": "GJ",
  "38808": "SQ",
  "39048": "JG",
  "39049": "XJ",
  "39052": "HG",
  "39076": "CZ",
  "39271": "XT",
  "39534": "TD",
  "39552": "TD",
  "39584": "PB",
  "39647": "SB",
  "39730": "LG",
  "39748": "TPB",
  "40109": "ZQ",
  "40479": "ND",
  "40516": "HG",
  "40536": "HG",
  "40583": "QJ",
  "40765": "YQ",
  "40784": "QJ",
  "40840": "YK",
  "40863": "QJG"
};
function checkCh(ch) {
  var uni = ch.charCodeAt(0);
  if (uni > 40869 || uni < 19968)
    return ch;
  return oMultiDiff[uni] ? oMultiDiff[uni] : strChineseFirstPY.charAt(uni - 19968);
}
function mkRslt(arr) {
  var arrRslt = [""];
  for (var i = 0, len = arr.length; i < len; i++) {
    var str = arr[i];
    var strlen = str.length;
    if (strlen == 1) {
      for (var k = 0; k < arrRslt.length; k++) {
        arrRslt[k] += str;
      }
    } else {
      var tmpArr = arrRslt.slice(0);
      arrRslt = [];
      for (k = 0; k < strlen; k++) {
        var tmp = tmpArr.slice(0);
        for (var j = 0; j < tmp.length; j++) {
          tmp[j] += str.charAt(k);
        }
        arrRslt = arrRslt.concat(tmp);
      }
    }
  }
  return arrRslt;
}
function makePy(str) {
  if (typeof str != "string")
    throw new Error("\u51FD\u6570makePy\u9700\u8981\u5B57\u7B26\u4E32\u7C7B\u578B\u53C2\u6570!");
  var arrResult = new Array();
  str = str.replace(/\s/g, "");
  for (var i = 0, len = str.length; i < len; i++) {
    var ch = str.charAt(i);
    arrResult.push(checkCh(ch));
  }
  return mkRslt(arrResult);
}
const cast$2 = new Cast();
function to_string$1(value) {
  return cast$2.str(value);
}
function to_number$1(value) {
  return cast$2.num(value);
}
function to_integer$1(value, round2 = false) {
  let newValue = cast$2.num(value);
  return !round2 ? parseInt(newValue + "") : Math.round(newValue);
}
function to_float$1(value, decimal = 2, round2 = false) {
  let newValue = cast$2.num(value);
  if (round2) {
    return (+newValue).toFixed(decimal);
  }
  if (decimal > 2)
    decimal = 2;
  if (decimal < 1)
    decimal = 1;
  let strValue = newValue + "";
  let index = strValue.indexOf(".");
  if (index > -1) {
    strValue = strValue.substring(0, decimal + index + 1);
  } else {
    strValue += decimal === 2 ? ".00" : ".0";
  }
  return strValue;
}
function to_local_cent$1(value, round2 = false) {
  let newValue = +to_float$1(value, 2, round2) || 0;
  return parseInt(Big(newValue).times(100) + "") || 0;
}
function to_boolean$1(value) {
  return cast$2.bool(value);
}
function to_array$1(value) {
  return cast$2.arr(value);
}
function to_symbol$1(value) {
  return cast$2.symbol(value);
}
function to_undefined$1() {
  return cast$2.undef();
}
function to_null$1() {
  return cast$2.nul();
}
function to_local_pinyin$1(value) {
  let newValue = cast$2.str(value);
  return makePy(newValue) || [];
}
var transformer = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  to_string: to_string$1,
  to_number: to_number$1,
  to_integer: to_integer$1,
  to_float: to_float$1,
  to_local_cent: to_local_cent$1,
  to_boolean: to_boolean$1,
  to_array: to_array$1,
  to_symbol: to_symbol$1,
  to_undefined: to_undefined$1,
  to_null: to_null$1,
  to_local_pinyin: to_local_pinyin$1
}, Symbol.toStringTag, { value: "Module" }));
function gen_uuid$1() {
  const s = [];
  const hexDigits = "0123456789abcdef";
  for (let i = 0; i < 36; i++) {
    let start2 = Math.floor(Math.random() * 16);
    s[i] = hexDigits.substring(start2, start2 + 1);
  }
  s[14] = "4";
  let start = +s[19] & 3 | 8;
  s[19] = hexDigits.substring(start, start + 1);
  s[8] = s[13] = s[18] = s[23] = "-";
  const uuid = s.join("");
  return uuid;
}
var generator = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  gen_uuid: gen_uuid$1
}, Symbol.toStringTag, { value: "Module" }));
function d_time$1() {
  return +Date.now();
}
function d_format$1(value) {
  if (!value) {
    value = d_time$1();
  }
  let date = new Date(value);
  let Y = date.getFullYear() + "-";
  let M = (date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1) + "-";
  let D = (date.getDate() < 10 ? "0" + date.getDate() : date.getDate()) + " ";
  let h = (date.getHours() < 10 ? "0" + date.getHours() : date.getHours()) + ":";
  let m = (date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes()) + ":";
  let s = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();
  return Y + M + D + h + m + s;
}
function d_format_YMD$1(value) {
  return d_format$1(value).substring(0, 10);
}
var datetTransformer = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  d_time: d_time$1,
  d_format: d_format$1,
  d_format_YMD: d_format_YMD$1
}, Symbol.toStringTag, { value: "Module" }));
const check$2 = new Check();
function exception(handle) {
  var _a;
  let wx = (_a = window["wx"]) != null ? _a : null;
  if (check$2.wx() && wx) {
    return handle && check$2.fun(handle) && handle(wx);
  } else {
    throw Error("This tool only for weapp!");
  }
}
function wx_clone_deep$1(value) {
  return exception(() => JSON.parse(JSON.stringify(value)));
}
function wx_dataset$1(e) {
  return exception(() => {
    var _a, _b;
    return (_b = (_a = e == null ? void 0 : e.currentTarget) == null ? void 0 : _a.dataset) != null ? _b : null;
  });
}
function wx_promisify$1(fn) {
  return exception(() => function(obj) {
    let args = [], len = arguments.length - 1;
    while (len-- > 0) {
      args[len] = arguments[len + 1];
    }
    if (obj === void 0)
      obj = {};
    return new Promise((resolve, reject) => {
      obj.success = (res) => {
        resolve(res);
      };
      obj.fail = (err) => {
        reject(err);
      };
      fn.apply(null, [obj].concat(args));
    });
  });
}
function wx_window_width$1() {
  return exception((wx) => parseInt(wx.getSystemInfoSync().windowWidth || 0));
}
function wx_window_height$1() {
  return exception((wx) => parseInt(wx.getSystemInfoSync().windowHeight || 0));
}
function wx_window_pixel_ratio$1() {
  return exception((wx) => parseInt(wx.getSystemInfoSync().pixelRatio || 0));
}
function wx_image_info_sync$1(path) {
  return exception((wx) => wx_promisify$1(wx.getImageInfo)({ src: path }));
}
function wx_file_info_sync$1(path) {
  return exception((wx) => wx_promisify$1(wx.getFileInfo)({ filePath: path }));
}
var weapp = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  wx_clone_deep: wx_clone_deep$1,
  wx_dataset: wx_dataset$1,
  wx_promisify: wx_promisify$1,
  wx_window_width: wx_window_width$1,
  wx_window_height: wx_window_height$1,
  wx_window_pixel_ratio: wx_window_pixel_ratio$1,
  wx_image_info_sync: wx_image_info_sync$1,
  wx_file_info_sync: wx_file_info_sync$1
}, Symbol.toStringTag, { value: "Module" }));
const check$1 = new Check();
const cast$1 = new Cast();
function forEach(obj, fn) {
  if (check$1.nul(obj) || check$1.undef(obj))
    return;
  if (!check$1.obj(obj)) {
    obj = cast$1.arr(obj);
  }
  if (check$1.arr(obj)) {
    for (let i = 0; i < obj.length; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    for (let key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}
const check = new Check();
const cast = new Cast();
function findByIndex(target, index) {
  return Reflect.get(target, +index < 0 ? target.length + +index + "" : index);
}
function findByDist(target, dist) {
  let lists;
  let len = target.length;
  if ((lists = dist.split(":")).length > 1) {
    let start = 0, end = 0, step = 0;
    start = +(lists[0] && lists[0].trim()) || 0;
    end = +(lists[1] && lists[1].trim()) || len;
    step = +(lists[2] && lists[2].trim()) || 1;
    start = +start;
    end = +end;
    if (start < 0) {
      start = len + start;
    }
    if (end < 0) {
      end = len + end;
    }
    if (start > len - 1) {
      start = len;
    }
    if (end > len - 1) {
      end = len;
    }
    if (start > end) {
      [start, end] = [end, start];
    }
    let reverse = false;
    if (step < 0) {
      step = -step;
      reverse = true;
    }
    let i = start;
    let result = [];
    while (i < end) {
      result.push(findByIndex(target, i));
      i += step;
    }
    if (reverse) {
      let left = 0;
      let right = result.length - 1;
      while (left < right) {
        [result[left], result[right]] = [result[right], result[left]];
        left += 1;
        right -= 1;
      }
    }
    return result;
  }
}
function batchRemove(target) {
  let argLists = [];
  return function(...args) {
    let indexes = /* @__PURE__ */ new Set();
    for (let i = 0; i < args.length; i++) {
      argLists.push(args[i]);
    }
    forEach(argLists, function iteratee(indexOrFn) {
      if (check.num(indexOrFn) || indexOrFn === +indexOrFn + "") {
        if (+indexOrFn < 0) {
          indexOrFn = target.length + +indexOrFn;
        }
        indexOrFn = +indexOrFn;
        if (!indexes.has(indexOrFn)) {
          indexes.add(indexOrFn);
        }
      } else if (check.fun(indexOrFn)) {
        let fn = indexOrFn;
        forEach(target, function(val, idx) {
          if (!indexes.has(idx) && !!fn(val)) {
            indexes.add(idx);
          }
        });
      }
    });
    const temp = [];
    forEach(target, function iteratee(val, idx) {
      if (!indexes.has(idx)) {
        temp.push(val);
      }
    });
    return temp;
  };
}
function wow_array$1(value) {
  if (check.undef(value) || !check.arr(value)) {
    value = cast.arr(value);
  }
  const hander = {
    get: function(target, key) {
      if (key === +key + "") {
        return findByIndex(target, key);
      }
      if (key === "first") {
        return findByIndex(target, 0);
      }
      if (key === "last") {
        return findByIndex(target, -1);
      }
      if (key.split(":").length > 1) {
        return findByDist(target, key + "");
      }
      if (key === "min") {
        return Math.min.apply(Math, target);
      }
      if (key === "max") {
        return Math.max.apply(Math, target);
      }
      if (key === "remove") {
        return batchRemove(target);
      }
      return Reflect.get(target, key);
    }
  };
  return new Proxy(value, hander);
}
var enhancer = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  wow_array: wow_array$1
}, Symbol.toStringTag, { value: "Module" }));
const {
  is_string,
  is_number,
  is_integer,
  is_positive_integer,
  is_float,
  is_positive_float,
  is_boolean,
  is_array,
  is_array_like,
  is_object,
  is_plain_object,
  is_object_like,
  is_symbol,
  is_function,
  is_NaN,
  is_undefined,
  is_null,
  is_length,
  is_arguments,
  is_error,
  is_leap_year,
  is_local_mobilephone,
  is_email,
  is_url
} = checker;
const {
  to_string,
  to_number,
  to_integer,
  to_float,
  to_local_cent,
  to_boolean,
  to_array,
  to_symbol,
  to_undefined,
  to_null,
  to_local_pinyin
} = transformer;
const {
  gen_uuid
} = generator;
const {
  d_time,
  d_format,
  d_format_YMD
} = datetTransformer;
const {
  wx_clone_deep,
  wx_dataset,
  wx_promisify,
  wx_window_width,
  wx_window_height,
  wx_window_pixel_ratio,
  wx_image_info_sync,
  wx_file_info_sync
} = weapp;
const {
  wow_array
} = enhancer;
export { d_format, d_format_YMD, d_time, gen_uuid, is_NaN, is_arguments, is_array, is_array_like, is_boolean, is_email, is_error, is_float, is_function, is_integer, is_leap_year, is_length, is_local_mobilephone, is_null, is_number, is_object, is_object_like, is_plain_object, is_positive_float, is_positive_integer, is_string, is_symbol, is_undefined, is_url, to_array, to_boolean, to_float, to_integer, to_local_cent, to_local_pinyin, to_null, to_number, to_string, to_symbol, to_undefined, wow_array, wx_clone_deep, wx_dataset, wx_file_info_sync, wx_image_info_sync, wx_promisify, wx_window_height, wx_window_pixel_ratio, wx_window_width };
